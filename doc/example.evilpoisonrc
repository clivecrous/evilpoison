# This is an example configuration file for evilpoison window manager.
# Copy this file to ~/.evilpoisonrc and edit it.
#
# All lines beginning with '#' are comments and are ignored.
# 
# Every line begins with a command and is optionally followed by that command's
# parameters. For a full listing of the available internal commands see the
# wiki page.
#
# Most of the commands within this file will be setting internal variables or
# binding keys. For a full list of the available internal variables see the
# wiki page.
#
#------------------------------------------------------------------------------
# Because most of the commands run within this file will be either 'set' or
# 'bind.keyboard', here is a brief description of their use:
#
#  set <variable name> <value>
#
#    Where "variable name" is a variable just like the listing of
#    InternalVariables on the wiki page, and "value" is the value you wish to
#    set it to.
#
#  bind.keyboard <key combination> <command>
#
#    Where "key combination" is the keyboard combination to bind the given
#    command to and "command" is a command just like the listing of
#    InternalCommands on the wiki page.
#
#==============================================================================

# Set window border width to 1 pixel wide
set border.width 1

# will mouse warp to the windows?  0 or 1
set mouse.warp 1

# will window focus follow mouse? 0 or 1
set mouse.focus 1

# will dragging windows be solid, or just outline?  0 or 1
set window.move.display 1

# will windows snap to screen borders?  0 disables, any positive integer
# defines the distance from which it snaps.
set border.snap 16

# how long does any non-interactive text window show up
# 1000 = 1 second
set text.delay 1000

# Setting the text colours
set text.colour.foreground Black
set text.colour.background Wheat

# Set colors
# focused window border
set border.colour.active goldenrod

# unfocused window border
set border.colour.inactive grey50

# floating window border
set border.colour.float.active blue
set border.colour.float.inactive grey50

# Key bindings

# set the command prefix key.
set prefix C-t

# next window
bind.keyboard	Return	window.next
bind.keyboard	Tab	window.next

# previous window
bind.keyboard	s-Return	window.previous
bind.keyboard	s-Tab	window.previous

# command mode
bind.keyboard	m	cmdmode

# new terminal
bind.keyboard	c	execute.fork xterm

# moving windows
bind.keyboard	y	window.moveto 0 0
bind.keyboard	u	window.moveto -0 0
bind.keyboard	b	window.moveto 0 -0
bind.keyboard	n	window.moveto -0 -0
bind.keyboard	h	window.move.left
bind.keyboard	l	window.move.right
bind.keyboard	k	window.move.up
bind.keyboard	j	window.move.down
bind.keyboard	Left	window.move.left
bind.keyboard	Right	window.move.right
bind.keyboard	Up	window.move.up
bind.keyboard	Down	window.move.down

# changing window size
bind.keyboard	a	window.resize 0 0 -$window.resize.velocity$ 0
bind.keyboard	d	window.resize 0 0 $window.resize.velocity$ 0
bind.keyboard	s	window.resize 0 0 0 -$window.resize.velocity$
bind.keyboard	w	window.resize 0 0 0 $window.resize.velocity$

bind.keyboard	plus	window.maximize.vertical
bind.keyboard	minus	window.maximize.horizontal
bind.keyboard	x	window.maximize

# mouse
bind.keyboard	comma	window.resize.mouse
bind.keyboard	period	window.move.mouse

# window stacking
bind.keyboard	Insert	window.lower

# virtual desks
# float window
bind.keyboard	f	window.float

# moving from desk to desk
bind.keyboard	o	desktop.navigate.previous
bind.keyboard	p	desktop.navigate.next

bind.keyboard	0	desktop.other

bind.keyboard	1	desktop.navigate.to 1
bind.keyboard	2	desktop.navigate.to 2
bind.keyboard	3	desktop.navigate.to 3
bind.keyboard	4	desktop.navigate.to 4
bind.keyboard	5	desktop.navigate.to 5
bind.keyboard	6	desktop.navigate.to 6
bind.keyboard	7	desktop.navigate.to 7
bind.keyboard	8	desktop.navigate.to 8

# kill window
bind.keyboard	Escape	window.close

# Make an alias for displaying the version number whenever I like
alias show_version echo EvilPoison $version$
# Show the version now
show_version
# bind version showing to the 'v' key
bind.keyboard v show_version

# Startup an xterm terminal for convenience.
execute.fork xterm -rv

# Create a date displaying alias
alias display_date echo Today\'s date: \!execute.here date\!
# Show today's date/time when 'D' is pressed
bind.keyboard s-d display_date
